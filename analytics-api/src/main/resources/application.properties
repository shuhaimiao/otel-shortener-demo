server.port=8082

# Basic health check configuration
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never

spring.application.name=analytics-api

# Kafka Configuration (placeholders, will be overridden by Docker Compose env vars)
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=analytics-group # Default group ID, can be overridden in @KafkaListener
spring.kafka.consumer.auto-offset-reset=earliest

# For JSON deserialization, if objects are used instead of String:
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.support.json.trusted.packages=*
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
# spring.kafka.consumer.properties.spring.json.value.default.type=com.example.analyticsapi.dto.YourEventDto

# If this service needs to write to Postgres (e.g. for the clicks table)
# spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
# spring.datasource.username=user
# spring.datasource.password=password
# spring.jpa.hibernate.ddl-auto=update # Or none, if managed by Flyway/Liquibase
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
